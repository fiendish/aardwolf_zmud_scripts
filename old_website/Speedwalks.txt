#ECHO "INSTALLING THE AARDWOLF SELF-UPDATING SPEEDWALK SCRIPT"
#ECHO ""
#CLASS {Speedwalks} {setdef}
#ALIAS runto {#CLASS speedwalkinternals 1;speedwalkget %-1;#IF (@speedwalkcommands != "") {#IF (%begins( @speedwalkcommands, "(NOTE)")) {#ECHO {Speedwalk for: @speedwalkfullname - @speedwalkcommands}} {#ECHO {Running to: @speedwalkfullname - %replace( @speedwalkcommands, "runt ", "runto ")};#EXECUTE {%replace( @speedwalkcommands, ";", %cr)}}};#CLASS speedwalkinternals 0}
#ALIAS speedwalkupdate {#CLASS speedwalkinternals 1;#VARIABLE speedwalkinternals/tempspeedwalklist "";#SEND where}
#ALIAS speedwalkhelp {#SAY "";#SAY %ansi( grey)"+-------------------------------------------------------------------+";#SAY %ansi( grey)"|                 Aardwolf Self-Updating Speedwalks                 |";#SAY %ansi( grey)"|      Author: Fiendish     (inspired by Danj's wjs_speedwalk)      |";#SAY %ansi( grey)"+-------------------------------------------------------------------+";#SAY %ansi( grey)"|                                                                   |";#SAY %ansi( grey)"|    Speedwalks are stored in 'aardwolf_speedwalks.txt'             |";#SAY %ansi( grey)"|    Overrides are stored in 'aardwolf_speedwalk_overrides.txt'     |";#SAY %ansi( grey)"|                                                                   |";#SAY %ansi( grey)"|    To override a speedwalk or to add one that doesn't exist, add  |";#SAY %ansi( grey)"|    it to the Overrides file using the same format as in the main  |";#SAY %ansi( grey)"|    file. To override a speedwalk, the name must be exactly the    |";#SAY %ansi( grey)"|    same as in the main file. After adding new speedwalks to       |";#SAY %ansi( grey)"|    the overrides file, type 'speedwalkupdate' to commit           |";#SAY %ansi( grey)"|    the changes.                                                   |";#SAY %ansi( grey)"|                                                                   |";#SAY %ansi( grey)"|    Any speedwalks beginning with "(NOTE)" will be echoed instead  |";#SAY %ansi( grey)"|    of executed.                                                   |";#SAY %ansi( grey)"|                                                                   |";#SAY %ansi( grey)"+-------------------------------------------------------------------+";#SAY %ansi( grey)"|                         List of Commands                          |";#SAY %ansi( grey)"+-----------------------+-------------------------------------------+";#SAY %ansi( grey)"|    speedwalkupdate    | Updates your speedwalks to match HELP SW  |";#SAY %ansi( grey)"+-----------------------+-------------------------------------------+";#SAY %ansi( grey)"|      runto ~<area~>     | Searches the list for a matching          |";#SAY %ansi( grey)"|                       | substring and runs the appropriate        |";#SAY %ansi( grey)"|                       | speedwalk                                 |";#SAY %ansi( grey)"|                       |                                           |";#SAY %ansi( grey)"|                       | examples:                                 |";#SAY %ansi( grey)"|                       |      runto zangar                         |";#SAY %ansi( grey)"|                       |      runto zangar's demonic grotto        |";#SAY %ansi( grey)"|                       |      runto city                           |";#SAY %ansi( grey)"|                       |  "%ansi( cyan)"The third one will prompt you to select"%ansi( grey)"  |";#SAY %ansi( grey)"|                       |  "%ansi( cyan)"from a list of possibilities, because"%ansi( grey)"    |";#SAY %ansi( grey)"|                       |  "%ansi( cyan)"'city' is not unique."%ansi( grey)"                    |";#SAY %ansi( grey)"+-----------------------+-------------------------------------------+";#SAY %ansi( grey)"|     checksw ~<area~>    | Like runto, but only displays the         |";#SAY %ansi( grey)"|                       | speedwalk without running it.             |";#SAY %ansi( grey)"+-----------------------+-------------------------------------------+";#SAY %ansi( grey)"| changespeedwalkprefix | Change whether custom commands get sent   |";#SAY %ansi( grey)"|                       | before running stock speedwalks.          |";#SAY %ansi( grey)"+-----------------------+-------------------------------------------+";#SAY %ansi( grey)"|     speedwalkhelp     | Displays this help screen                 |";#SAY %ansi( grey)"+-----------------------+-------------------------------------------+";#SAY ""}
#ALIAS checksw {#CLASS speedwalkinternals 1;speedwalkget %-1;#IF (@speedwalkcommands != "") {#ECHO {Speedwalk for: @speedwalkfullname - %if( %begins( @speedwalkcommands, @speedwalkprefix), %remove( @speedwalkprefix, @speedwalkcommands), %replace( @speedwalkcommands, "runt ", "runto "))}};#VARIABLE speedwalkinternals/speedwalkcommands "";#VARIABLE speedwalkinternals/speedwalkfullname "";#VARIABLE speedwalkinternals/speedwalkline "";#VARIABLE speedwalkinternals/speedwalkdata "";#CLASS speedwalkinternals 0}
#ALIAS changespeedwalkprefix {#YESNO "Would you like to execute any commands before running a stock speedwalk?" {Yes:#PROMPT speedwalkprefix "Enter the semicolon-separated comands to add before executing stock runs ( e.g. recall or home;down )"} {No:#VARIABLE speedwalkprefix ""};#IF (@speedwalkprefix != "" & !%ends( @speedwalkprefix, ";")) {#VARIABLE speedwalkprefix %concat( @speedwalkprefix, ";")};speedwalkupdate}
#VAR speedwalkprefix {}
#CLASS 0
#CLASS {Speedwalks|speedwalkinternals} {setdef}
#ALIAS speedwalkget {#VARIABLE speedwalkcommands "";#VARIABLE speedwalkfullname "";#VARIABLE speedwalkline "%-1";#GAGON;#FILE 1 @speedwalkfilename;#VARIABLE speedwalkdata %grep( 1, @speedwalkline*:@speedwalkprefix~run);#CLOSE 1;#DELITEM speedwalkdata "############### OVERRIDES ###############";#DELITEM speedwalkdata "############### STOCK SWs ###############";#GAGOFF;#IF (%numitems( @speedwalkdata) = 0) {#ECHO {No stored speedwalks found for %-1. Trying mudside...};#SEND {runto %-1}};#IF (%numitems( @speedwalkdata) = 1) {#VARIABLE speedwalkline %numwords( @speedwalkdata, ":");#VARIABLE speedwalkcommands %trim( %word( @speedwalkdata, @speedwalkline, ":"));#VARIABLE speedwalkfullname %trim( %replace( %delnitem( %replace( @speedwalkdata, ":", "|"), @speedwalkline), "|", ":"))};#IF (%numitems( @speedwalkdata) > 1) {#VARIABLE speedwalkdata %subregex( @speedwalkdata, "(~[^|~]+)\:(~[^:|~]+)", "%replace("%%%1",":","~~~, "):%%%1// %%%2");#VARIABLE speedwalkdata %pick( p:"Which area did you want?", o:1, %expand( @speedwalkdata, -1));#VARIABLE speedwalkfullname %trim( %word( @speedwalkdata, 1, "//"));#VARIABLE speedwalkcommands %trim( %word( @speedwalkdata, 2, "//"))}} "Speedwalks|speedwalkinternals"
#VAR speedwalkcommands {}
#VAR speedwalkline {}
#VAR tempspeedwalklist {}
#VAR overrideline {}
#VAR speedwalkfullname {}
#VAR speedwalkdata {}
#VAR speedwalkfilename {}
#VAR overridefilename {}
#TRIGGER {^You do not page long messages.$} {#SEND {find all};#SEND {speedwalk}}
#TRIGGER {^You currently display (%d) lines per page.$} {#SEND {scroll 0};#SEND {find all};#SEND {speedwalk};#SEND {scroll %1}}
#TRIGGER {^(The Realm of Infamy             )(*)$} {#PRIORITY {#T- "^(.{32})(.*)$";#ADDITEM tempspeedwalklist "%1//%2";#VARIABLE speedwalkfilename %concat( %replace( %right( {%session.zMUDFileName("","")}, 2), "\", "/"), "aardwolf_speedwalks.txt");#VARIABLE overridefilename %concat( %replace( %right( {%session.zMUDFileName("","")}, 2), "\", "/"), "aardwolf_speedwalk_overrides.txt");#FILE 1 @speedwalkfilename;#ERASE 1;#FILE 1 @speedwalkfilename;#FILE 2 @overridefilename;#WRITE 1 "############### OVERRIDES ###############";#LOOP %filesize( 2) {#WRITE 1 %read( 2)};#WRITE 1 "############### STOCK SWs ###############";#FORALL @tempspeedwalklist {#VARIABLE speedwalkline "%i";#IF (not %begins( @speedwalkline, "--------")) {#VARIABLE overrideline %grep( 1, %word( @speedwalkline, 1, "//"));#IF (@overrideline = "") {#WRITE 1 %concat( %word( @speedwalkline, 1, "//"), ":", %if( %begins( %word( @speedwalkline, 2, "//"), "run "), @speedwalkprefix), %stripansi( %word( @speedwalkline, 2, "//")))}}};#CLOSE 1;#CLOSE 2;#VARIABLE tempspeedwalklist "";#VARIABLE speedwalkline "";#VARIABLE overrideline ""};#GAGOFF;#ECHO "YOUR SPEEDWALK LIST HAS BEEN UPDATED. THE FOLLOWING AREA ENTRIES WERE NOT USED.";#ECHO "TO USE THEM YOU MUST ADD THEM TO THE OVERRIDES FILE AS DESCRIBED IN 'SPEEDWALKHELP'.";#CLASS speedwalkinternals 0} "" {case|notrig}
#REGEX {^(.{32})(.*)$} {#PRIORITY {#IF (%begins( %2, "run ")) {#ADDITEM tempspeedwalklist "%1//%2"} {#IF (%len( %2) != 0) {#ADDITEM tempspeedwalklist "%1//(NOTE) %2"}}}} "" {case|notrig|disable}
#REGEX {^------------------------------  ----------------------------------------------$} {#PRIORITY {#T+ "^(.{32})(.*)$"}} "" {case|verbatim|notrig}
#REGEX {^------------ --------------------------------------------------$} {#PRIORITY {#T+ "^(.{13})(.*)$"}} "" {case|verbatim|notrig}
#REGEX {^(.{13})(.*)$} {#PRIORITY {#IF (not (%match( %trigger, "Use * to see directions from your current room.") or %match( %trigger, "------------ --------------------------------------------------"))) {#ADDITEM tempspeedwalklist "(%trim(%1)) %2//runt %1"}}} "" {case|notrig|disable}
#TRIGGER {^Use 'find [keyword]' to see directions from your current room.$} {#PRIORITY {#T- "^(.{13})(.*)$"}} "" {case|verbatim|notrig}
#TRIGGER {^You are in area : (*)$} {#GAG;#IF ("%1" = "The Grand City of Aylor") {#ECHO "UPDATING SPEEDWALKS. THIS MAY TAKE A FEW SECONDS...";#GAGON;#SEND scroll} {#ECHO "YOU MUST BE IN AYLOR TO UPDATE YOUR SPEEDWALKS. GO THERE AND TYPE 'SPEEDWALKUPDATE' AGAIN.";#CLASS speedwalkinternals 0;#GAGBLOCK}} "" {case|notrig}
#CLASS 0
#CLASS Speedwalks|speedwalkinternals 0
speedwalkhelp
#ECHO ""
#ECHO "AUTOMATICALLY UPDATING YOUR SPEEDWALK LIST AFTER INSTALLATION"
changespeedwalkprefix
